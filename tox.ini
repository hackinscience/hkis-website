[flake8]
max-line-length = 88
max-complexity = 10
exclude = hkis/migrations/,hackinscience_org/settings.py
;W503 for black (operators and newlines)
ignore = W503

[coverage:run]
; branch = true
parallel = true
omit =
  .tox/*

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[tox]
envlist = py3{7,8,9,10}-{pinned,unpinned}, flake8, mypy, black, pylint, coverage
isolated_build = True
skip_missing_interpreters = True

; We test both with pinned dependencies and normal install:
; pinned: To use the provided pinned requirements.txt
; unpinned: To just rely dependencies in setup.cfg

[testenv]
deps =
  pytest
  coverage
  pinned: -r requirements.txt
commands = coverage run manage.py test
setenv =
  COVERAGE_FILE={toxworkdir}/.coverage.{envname}

[testenv:coverage]
depends = py37, py38, py39, py310
parallel_show_output = True
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
  coverage combine
  coverage report --fail-under 70

[testenv:flake8]
deps = flake8
commands = flake8 hackinscience_org/ hkis/ scripts/

[testenv:black]
deps = black
commands = black --check --diff --exclude migrations/ hackinscience_org/ hkis/ scripts/

[testenv:mypy]
deps =
    mypy
    types-bleach
    types-requests
    types-Markdown

commands = mypy --ignore-missing hackinscience_org/ hkis/ scripts/

[testenv:pylint]
deps =
    pylint
    pylint-django
commands = pylint --min-similarity-lines=5 --ignore settings.py,tests.py --disable=too-many-ancestors --load-plugins pylint_django --django-settings-module=hackinscience_org.settings hackinscience_org hkis scripts/fetch.py scripts/push.py
