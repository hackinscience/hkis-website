[{"model": "website.exercise", "pk": 3, "fields": {"title": "Hello World", "slug": "hello-world", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    with open(\"solution.py\") as solution:\r\n        code = solution.read().lower()\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n    if complete_process.stdout.strip().lower() == \"hello world\":\r\n        exit(0)\r\n    if \"print\" not in code and \"hello\" in code:\r\n        print(\"You're not in Python interpreter, there is no implicit print here, you have to use the print function.\")\r\n        return\r\n    if complete_process.stdout.strip().lower() != \"hello world\":\r\n        print('You should print \"Hello World\"!')\r\n        exit(1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    check()", "is_published": true, "solution": "print(\"Hello World\")", "wording": "# Hello World\r\n\r\nRequires: python.\r\nIntroduces: print, strings.\r\n\r\nAuthor(s): Julien Palard\r\n\r\n## Instructions\r\n\r\nWrite a single line of code that will display the string \"Hello world\" when executed.\r\n\r\n## Advice\r\n\r\n- Read about [strings](https://docs.python.org/3/tutorial/introduction.html#strings).\r\n- Use the [`print()`](https://docs.python.org/3/library/functions.html#print)  function.\r\n\r\n## Evaluation\r\n\r\nThe correction bot will test your program and expect to see \"Hello world\" (does not care about capitalisation, for this one).", "initial_solution": "#!/usr/bin/env python3", "position": 0.0}}, {"model": "website.exercise", "pk": 5, "fields": {"title": "Print 42", "slug": "print-42", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n    if complete_process.stdout.strip() == '42':\r\n        exit(0)\r\n    with open(\"solution.py\") as solution:\r\n        code = solution.read()\r\n        if any(quote in code for quote in ('\"', \"'\")):\r\n            print(\"If you're using quotes, it's not an integer, it's a string.\\nYes print will render it the same way, but the exercise is here to make you use numbers.\")\r\n            return\r\n        if \"print\" not in code and \"42\" in code:\r\n            print(\"You're not in Python interpreter, there is no implicit print here, you have to use the print function.\")\r\n            return\r\n    print(\"Drzzzt: wrong, I need a 42!\")\r\n    exit(1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    check()", "is_published": true, "solution": "print(42)", "wording": "# 42\r\n\r\nRequires: python.\r\nIntroduces: print, numbers.\r\n\r\nAuthor(s): Julien Palard\r\n\r\n## Instructions\r\n\r\nWrite a single line of code displaying the number 42.\r\n\r\n\r\n## Advice\r\n\r\n- Read about [numbers](https://docs.python.org/3/tutorial/introduction.html#numbers).\r\n- Use the [`print()`](https://docs.python.org/3.4/library/functions.html#print) function.\r\n\r\nI'm not asking to print the string \"42\", (composed of two chars), but the number 42.", "initial_solution": "#!/usr/bin/env python3", "position": 1.0}}, {"model": "website.exercise", "pk": 7, "fields": {"title": "Simple list", "slug": "simple-list", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    with open('solution.py') as solution:\r\n        code = solution.read()\r\n        if '\"[' in code or \"'[\" in code:\r\n            return \"You wrote the brackets in a string, so it's not a list, it's a string.\"\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        return complete_process.stderr\r\n    if 'hello world' in complete_process.stdout.lower():\r\n        if 'Hello world' not in complete_process.stdout:\r\n            return \"Be strict about capitalization!\"\r\n    if 'print' not in code:\r\n        return \"You're not in a REPL, there's not implicit print here.\"\r\n    if complete_process.stdout.strip() != \"[2019, 'CRI']\":\r\n        print(\"Wrong, expected [2019, 'CRI'], got:\")\r\n        print(complete_process.stdout)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    result = check()\r\n    if result:\r\n        print(result)", "is_published": true, "solution": "print([2019, 'CRI'])", "wording": "# A list with two items\r\n\r\nRequires: strings, numbers.\r\nIntroduces: list.\r\n\r\nAuthor(s): Julien Palard\r\n\r\n## Instructions\r\n\r\nUse the `print` function to display a list containing two elements: the number 2019, and the string \"CRI\".\r\n\r\n\r\n## Advice\r\n\r\n- Check the [list syntax](https://docs.python.org/3/tutorial/introduction.html#lists).\r\n- Use the\r\n[`print()`](https://docs.python.org/3/library/functions.html#print)\r\nfunction.\r\n- You don't need any variable.\r\n- Notice that I'm not asking to print the string '[2019, \"CRI\"]', (composed of 13 chars), but the list containing a string an a number.\r\n- But don't worry, print() will understand your list, and will display a friendly version of it. Python works for you, you're not working for Python.", "initial_solution": "#!/usr/bin/env python3", "position": 2.0}}, {"model": "website.exercise", "pk": 8, "fields": {"title": "Loop", "slug": "loop", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n    if complete_process.stdout.strip() != \"\\n\".join(\"Hello World!\"):\r\n        print(\"Hey.... no, got:\",\r\n              repr(complete_process.stdout.strip()),\r\n              \"expected:\",\r\n              repr(\"\\n\".join(\"Hello World!\")), sep=\"\\n\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    check()", "is_published": true, "solution": "for char in \"Hello World!\":\r\n    print(char)", "wording": "# Loop\r\n\r\nRequires: strings.\r\nIntroduces: for.\r\n\r\nAuthor(s): Julien Palard\r\n\r\n## Instructions\r\n\r\nWrite a two lines program that prints \"Hello World!\" vertically.\r\n\r\nIt should look like this:\r\n\r\n```\r\nH\r\ne\r\nl\r\nl\r\no\r\n\r\nW\r\no\r\nr\r\nl\r\nd\r\n!\r\n```\r\n\r\n\r\n## Advice\r\n\r\n- You must use a [`for`](https://docs.python.org/3.4/reference/compound_stmts.html#for) loop.\r\n- Beware of the space, capitalization, and exclamation mark.\r\n- Remember that a Python string is enumerable, so you should keep this one really simple.", "initial_solution": "#!/usr/bin/env python3", "position": 3.3}}, {"model": "website.exercise", "pk": 9, "fields": {"title": "Characters counting", "slug": "characters-counting", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        if 'IndentationError' in complete_process.stderr:\r\n            print(\"Beware, the editor added a space \"\r\n                  \"before your print, remove it.\")\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n\r\n    output = complete_process.stdout.strip()\r\n    try:\r\n        output = int(output)\r\n    except ValueError:\r\n        print(\"I expect your output to be an integer, got:\")\r\n        print(output)\r\n        exit(1)\r\n    if output > 485:\r\n        print(\"It's less\")\r\n        exit(1)\r\n    if output < 485:\r\n        print(\"It's more\")\r\n        exit(1)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    check()", "is_published": true, "solution": "phantom_menace = \"\"\"Turmoil has engulfed the Galactic Republic. The\\\r\n taxation of trade routes to outlying star systems is in\\\r\n dispute. Hoping to resolve the matter with a blockade of deadly\\\r\n battleships, the greedy Trade Federation has stopped all shipping to\\\r\n the small planet of Naboo. While the congress of the Republic\\\r\n endlessly debates this alarming chain of events, the Supreme\\\r\n Chancellor has secretly dispatched two Jedi Knights, the guardians of\\\r\n peace and justice in the galaxy, to settle the conflict\"\"\"\r\nprint(len(phantom_menace))", "wording": "# Characters counting\r\n\r\nRequires: strings, list.\r\nIntroduces: len, variable.\r\n\r\n## Instructions\r\n\r\nPrint the number of characters in the following paragraph:\r\n\r\n> Turmoil has engulfed the Galactic Republic. The\r\n  taxation of trade routes to outlying star systems is in\r\n  dispute. Hoping to resolve the matter with a blockade of deadly\r\n  battleships, the greedy Trade Federation has stopped all shipping to\r\n  the small planet of Naboo. While the congress of the Republic\r\n  endlessly debates this alarming chain of events, the Supreme\r\n  Chancellor has secretly dispatched two Jedi Knights, the guardians of\r\n  peace and justice in the galaxy, to settle the conflict\r\n\r\n## Advice\r\n\r\nTake a look at [`len()`](https://docs.python.org/3/library/functions.html#len) function.", "initial_solution": "#!/usr/bin/env python3\r\n\r\nphantom_menace = \"\"\"Turmoil has engulfed the Galactic Republic. The\r\ntaxation of trade routes to outlying star systems is in\r\ndispute. Hoping to resolve the matter with a blockade of deadly\r\nbattleships, the greedy Trade Federation has stopped all shipping to\r\nthe small planet of Naboo. While the congress of the Republic\r\nendlessly debates this alarming chain of events, the Supreme\r\nChancellor has secretly dispatched two Jedi Knights, the guardians of\r\npeace and justice in the galaxy, to settle the conflict\"\"\"\r\n\r\n# Enter your code below:", "position": 7.0}}, {"model": "website.exercise", "pk": 10, "fields": {"title": "Counting Words", "slug": "counting-words", "check": "#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ndef check():\r\n    complete_process = subprocess.run([\"python3\", \"./solution.py\"],\r\n                                      stdout=subprocess.PIPE,\r\n                                      stderr=subprocess.PIPE,\r\n                                      universal_newlines=True)\r\n    if complete_process.stderr:\r\n        if 'IndentationError' in complete_process.stderr:\r\n            print(\"Beware, the editor added a space \"\r\n                  \"before your print, remove it.\")\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n    if complete_process.stderr:\r\n        print(complete_process.stderr)\r\n        exit(1)\r\n\r\n    try:\r\n        output = int(complete_process.stdout.strip())\r\n    except ValueError:\r\n        print(\"I expect your output to be an integer.\")\r\n        exit(0)\r\n    if output > 78:\r\n        print(\"It's less\")\r\n    if output < 78:\r\n        print(\"It's more\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    check()", "is_published": true, "solution": "phantom_menace = \"\"\"Turmoil has engulfed the Galactic Republic. The\\\r\n taxation of trade routes to outlying star systems is in\\\r\n dispute. Hoping to resolve the matter with a blockade of deadly\\\r\n battleships, the greedy Trade Federation has stopped all shipping to\\\r\n the small planet of Naboo. While the congress of the Republic\\\r\n endlessly debates this alarming chain of events, the Supreme\\\r\n Chancellor has secretly dispatched two Jedi Knights, the guardians of\\\r\n peace and justice in the galaxy, to settle the conflict\"\"\"\r\nprint(len(phantom_menace.split(' ')))", "wording": "# Counting Words\r\n\r\nRequires: strings, list.\r\nIntroduces: split, len.\r\n\r\n\r\n## Instructions\r\n\r\nProvide a script that prints the number of words of the paragraph:\r\n\r\n> Turmoil has engulfed the Galactic Republic. The\r\n  taxation of trade routes to outlying star systems is in\r\n  dispute. Hoping to resolve the matter with a blockade of deadly\r\n  battleships, the greedy Trade Federation has stopped all shipping to\r\n  the small planet of Naboo. While the congress of the Republic\r\n  endlessly debates this alarming chain of events, the Supreme\r\n  Chancellor has secretly dispatched two Jedi Knights, the guardians of\r\n  peace and justice in the galaxy, to settle the conflict\r\n\r\n\r\n\r\n## Advice\r\n\r\nTake a look at the [`split`](https://docs.python.org/3/library/stdtypes.html#str.split) method.", "initial_solution": "#!/usr/bin/env python3\r\n\r\nphantom_menace = \"\"\"Turmoil has engulfed the Galactic Republic. The\r\ntaxation of trade routes to outlying star systems is in\r\ndispute. Hoping to resolve the matter with a blockade of deadly\r\nbattleships, the greedy Trade Federation has stopped all shipping to\r\nthe small planet of Naboo. While the congress of the Republic\r\nendlessly debates this alarming chain of events, the Supreme\r\nChancellor has secretly dispatched two Jedi Knights, the guardians of\r\npeace and justice in the galaxy, to settle the conflict\"\"\"\r\n\r\n# Enter your code below:", "position": 8.4}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "website", "model": "answer"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "website", "model": "exercise"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "website", "model": "snippet"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "website", "model": "lesson"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "registration", "model": "registrationprofile"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "registration", "model": "supervisedregistrationprofile"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "sessions.session", "pk": "zi5pgrxv971v85lh3avti75c1pto52k7", "fields": {"session_data": "NGVkMmIyYWU3NTc4ZGIwMTBiNjk3ZmExYzVmY2UyMWFiOWZiNDU1Nzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIyZWI3NWFjZjJiZDc1NzRhMTgxMmQ1MTI3YTJmNDU1NGZjZDg1MWQwIn0=", "expire_date": "2019-02-24T21:37:51.485Z"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add answer", "content_type": 1, "codename": "add_answer"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change answer", "content_type": 1, "codename": "change_answer"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete answer", "content_type": 1, "codename": "delete_answer"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view answer", "content_type": 1, "codename": "view_answer"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add exercise", "content_type": 2, "codename": "add_exercise"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change exercise", "content_type": 2, "codename": "change_exercise"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete exercise", "content_type": 2, "codename": "delete_exercise"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view exercise", "content_type": 2, "codename": "view_exercise"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add snippet", "content_type": 3, "codename": "add_snippet"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change snippet", "content_type": 3, "codename": "change_snippet"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete snippet", "content_type": 3, "codename": "delete_snippet"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view snippet", "content_type": 3, "codename": "view_snippet"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add lesson", "content_type": 4, "codename": "add_lesson"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change lesson", "content_type": 4, "codename": "change_lesson"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete lesson", "content_type": 4, "codename": "delete_lesson"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view lesson", "content_type": 4, "codename": "view_lesson"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add registration profile", "content_type": 5, "codename": "add_registrationprofile"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change registration profile", "content_type": 5, "codename": "change_registrationprofile"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete registration profile", "content_type": 5, "codename": "delete_registrationprofile"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view registration profile", "content_type": 5, "codename": "view_registrationprofile"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add supervised registration profile", "content_type": 6, "codename": "add_supervisedregistrationprofile"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change supervised registration profile", "content_type": 6, "codename": "change_supervisedregistrationprofile"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete supervised registration profile", "content_type": 6, "codename": "delete_supervisedregistrationprofile"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view supervised registration profile", "content_type": 6, "codename": "view_supervisedregistrationprofile"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add log entry", "content_type": 7, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change log entry", "content_type": 7, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete log entry", "content_type": 7, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view log entry", "content_type": 7, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add permission", "content_type": 8, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change permission", "content_type": 8, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete permission", "content_type": 8, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view permission", "content_type": 8, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add group", "content_type": 9, "codename": "add_group"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change group", "content_type": 9, "codename": "change_group"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete group", "content_type": 9, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view group", "content_type": 9, "codename": "view_group"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add user", "content_type": 10, "codename": "add_user"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change user", "content_type": 10, "codename": "change_user"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete user", "content_type": 10, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view user", "content_type": 10, "codename": "view_user"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add content type", "content_type": 11, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change content type", "content_type": 11, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete content type", "content_type": 11, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view content type", "content_type": 11, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add session", "content_type": 12, "codename": "add_session"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change session", "content_type": 12, "codename": "change_session"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete session", "content_type": 12, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view session", "content_type": 12, "codename": "view_session"}}, {"model": "auth.group", "pk": 1, "fields": {"name": "prof", "permissions": []}}, {"model": "auth.group", "pk": 2, "fields": {"name": "The Walking Dead", "permissions": []}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$120000$CWCXaR6YOSnL$yMiZULRLVfJbLaGfyhyEw1yI3MSl8H/7uAplYk46g/k=", "last_login": "2019-02-10T21:37:51.457Z", "is_superuser": true, "username": "mdk", "first_name": "", "last_name": "", "email": "mdk@mdk.fr", "is_staff": true, "is_active": true, "date_joined": "2019-02-10T21:37:48.485Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$120000$tpZiZvJyoOeZ$q9PrNRKkpqQ0SDasa/gjUnpy+Spw5PhrJrYJ37j9WjQ=", "last_login": null, "is_superuser": false, "username": "Michonne", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:39:49Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$120000$2JUsImrgyUp5$gh0qRocxEa0RsQ84rdPNaIv8bOOT2Lq9Z2TkjIlBvRc=", "last_login": null, "is_superuser": false, "username": "Daryl", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:40:01Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 4, "fields": {"password": "pbkdf2_sha256$120000$hrU1322HVHJr$3ZFmBK4iVkxRzBscufGcligel8KYvAhSXBm30L5ZURo=", "last_login": null, "is_superuser": false, "username": "Carol", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:40:12Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 5, "fields": {"password": "pbkdf2_sha256$120000$rFRV0cxALnGM$hgg2rPcp2REPUDr+wtxXTLp+DHT6/Lily5qxtXNz0fo=", "last_login": null, "is_superuser": false, "username": "Tara", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:40:56Z", "groups": [2], "user_permissions": []}}, {"model": "auth.user", "pk": 6, "fields": {"password": "pbkdf2_sha256$120000$wZfiZM7K0QYe$d11L5J967qC7sff2tZ5D6mrd6MmH0OuBZQAYlZNMONE=", "last_login": null, "is_superuser": false, "username": "Homer", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:42:25.932Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 7, "fields": {"password": "pbkdf2_sha256$120000$fL4vwKElgLug$omtXvcbIyt7TqfR27rlAaCIajSXS22CwLx4zLURqpBA=", "last_login": null, "is_superuser": false, "username": "Marge", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:42:48.960Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 8, "fields": {"password": "pbkdf2_sha256$120000$1TZaymFA4GLI$i2Yt6UjgiVElTno0dJjGHwLEcd6RAU5GntEfpEFyhXU=", "last_login": null, "is_superuser": false, "username": "Bart", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:43:08.174Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 9, "fields": {"password": "pbkdf2_sha256$120000$2InRHMun9KTB$bmjHGTHndpP0tN1ERQ4XUn+sDuVK6Lsu80vQicqJuqE=", "last_login": null, "is_superuser": false, "username": "Lisa", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-02-10T21:43:20.325Z", "groups": [], "user_permissions": []}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2019-02-10T21:39:49.665Z", "user": 1, "content_type": 10, "object_id": "2", "object_repr": "Michonne", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2019-02-10T21:40:01.217Z", "user": 1, "content_type": 10, "object_id": "3", "object_repr": "Daryl", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2019-02-10T21:40:13.015Z", "user": 1, "content_type": 10, "object_id": "4", "object_repr": "Carol", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2019-02-10T21:40:56.644Z", "user": 1, "content_type": 10, "object_id": "5", "object_repr": "Tara", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2019-02-10T21:41:07.303Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "prof", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2019-02-10T21:41:16.057Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "The Walking Dead", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2019-02-10T21:41:29.679Z", "user": 1, "content_type": 10, "object_id": "4", "object_repr": "Carol", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"groups\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2019-02-10T21:41:36.530Z", "user": 1, "content_type": 10, "object_id": "3", "object_repr": "Daryl", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"groups\"]}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2019-02-10T21:41:43.205Z", "user": 1, "content_type": 10, "object_id": "2", "object_repr": "Michonne", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"groups\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2019-02-10T21:41:49.522Z", "user": 1, "content_type": 10, "object_id": "5", "object_repr": "Tara", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"groups\"]}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2019-02-10T21:42:26.018Z", "user": 1, "content_type": 10, "object_id": "6", "object_repr": "Homer", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2019-02-10T21:42:49.113Z", "user": 1, "content_type": 10, "object_id": "7", "object_repr": "Marge", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2019-02-10T21:43:08.262Z", "user": 1, "content_type": 10, "object_id": "8", "object_repr": "Bart", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2019-02-10T21:43:20.414Z", "user": 1, "content_type": 10, "object_id": "9", "object_repr": "Lisa", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}]